{
    "swagger": "2.0",
    "info": {
        "description": "This API is for demonstration purposes only.",
        "title": "Config Manager APIs",
        "termsOfService": "http://github.com/gofreego/configo/readme.md",
        "contact": {
            "name": "Developers",
            "url": "http://www.github.com/gofreego",
            "email": "pavanyewale1996@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "paths": {
        "/configo/v1/config": {
            "get": {
                "description": "Get config by key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Config"
                ],
                "summary": "Get config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "config key",
                        "name": "key",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetConfigResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "post": {
                "description": "Save config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Config"
                ],
                "summary": "Save config",
                "parameters": [
                    {
                        "description": "config object",
                        "name": "config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "config saved successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/configo/v1/metadata": {
            "get": {
                "description": "Get all config keys",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Config"
                ],
                "summary": "Get all config keys",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ConfigMetadataResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/configo/v1/web/": {
            "get": {
                "description": "UI",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "Config"
                ],
                "summary": "UI",
                "responses": {
                    "200": {
                        "description": "UI",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        }
    },
    "definitions": {
        "constants.ConfigType": {
            "type": "string",
            "enum": [
                "string",
                "number",
                "boolean",
                "json",
                "bigText",
                "choice",
                "parent",
                "list"
            ],
            "x-enum-varnames": [
                "CONFIG_TYPE_STRING",
                "CONFIG_TYPE_NUMBER",
                "CONFIG_TYPE_BOOLEAN",
                "CONFIG_TYPE_JSON",
                "CONFIG_TYPE_BIG_TEXT",
                "CONFIG_TYPE_CHOICE",
                "CONFIG_TYPE_PARENT",
                "CONFIG_TYPE_LIST"
            ]
        },
        "models.ConfigInfo": {
            "type": "object",
            "properties": {
                "configKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.ConfigMetadataResponse": {
            "type": "object",
            "properties": {
                "configInfo": {
                    "$ref": "#/definitions/models.ConfigInfo"
                },
                "serviceInfo": {
                    "$ref": "#/definitions/models.ServiceInfo"
                }
            }
        },
        "models.ConfigObject": {
            "type": "object",
            "properties": {
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ConfigObject"
                    }
                },
                "choices": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "required": {
                    "type": "boolean"
                },
                "type": {
                    "$ref": "#/definitions/constants.ConfigType"
                },
                "value": {}
            }
        },
        "models.GetConfigResponse": {
            "type": "object",
            "properties": {
                "configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ConfigObject"
                    }
                },
                "createdAt": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "integer"
                },
                "updatedBy": {
                    "type": "string"
                }
            }
        },
        "models.ServiceInfo": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.UpdateConfigRequest": {
            "type": "object",
            "properties": {
                "configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ConfigObject"
                    }
                },
                "key": {
                    "type": "string"
                }
            }
        }
    }
}